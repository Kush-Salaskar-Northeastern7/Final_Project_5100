/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DeliveryManRole;

import Business.DB4OUtil.DB4OUtil;
import Business.DeliveryMan.DeliveryMan;
import Business.EcoSystem;

import Business.UserAccount.UserAccount;
import Business.WorkQueue.PatientOrderWorkRequest;
import Business.WorkQueue.ReStockWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.LoginScreen;

/**
 *
 * @author raunak
 */
public class DeliveryManWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;
    private UserAccount account;
    private DeliveryMan delman;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    
    /**
     * Creates new form LabAssistantWorkAreaJPanel
     */
    public DeliveryManWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem system) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.system = system;
      
        setDM();
        populateTable();
    }
    
    public void setDM(){
        for(DeliveryMan dm : system.getDeliveryManDirectory().getDeliveryManList()){
            if (dm.getUserAccount().getUid() == account.getUid()) {
                delman = dm;
            }
        }
    }
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)tblOrders.getModel();
        
        model.setRowCount(0);
        if(system.getDeliveryManDirectory().getDeliveryManList().size() == 0) return;
        for (DeliveryMan dm : system.getDeliveryManDirectory().getDeliveryManList()) {
//            account.getUsername()
            if (dm.getUserAccount().getUid() == account.getUid()) {
                if(dm.isIsSupplier()){
                    tblOrders.getColumnModel().getColumn(2).setHeaderValue("Type");
                    tblOrders.getColumnModel().getColumn(3).setHeaderValue("Quantity");
                    for(WorkRequest request : dm.getUserAccount().getWorkQueue().getWorkRequestList()){
                        if(request instanceof PatientOrderWorkRequest){
                            Object[] row = new Object[5];
                            row[0] = (PatientOrderWorkRequest)request;
                            row[1] = ((PatientOrderWorkRequest)request).getCustomer();
                            row[2] = ((PatientOrderWorkRequest)request).isType1() ? "Type1" : "Type2";
                            row[3] = ((PatientOrderWorkRequest)request).getQuantity();
                            row[4] = ((PatientOrderWorkRequest)request).getStatus();

                            model.addRow(row);
                        }
                    } 
                } else {
                    tblOrders.getColumnModel().getColumn(2).setHeaderValue("Type1");
                    tblOrders.getColumnModel().getColumn(3).setHeaderValue("Type2");
                     for(WorkRequest request : dm.getUserAccount().getWorkQueue().getWorkRequestList()){
                        if(request instanceof ReStockWorkRequest){
                            Object[] row = new Object[5];
                            row[0] = (ReStockWorkRequest)request;
                            row[1] = ((ReStockWorkRequest)request).getSm() != null ? ((ReStockWorkRequest)request).getSm() : ((ReStockWorkRequest)request).getDoc();
                            row[2] = ((ReStockWorkRequest)request).getQuantity1();
                            row[3] = ((ReStockWorkRequest)request).getQuantity2();
                            row[4] = ((ReStockWorkRequest)request).getStatus();

                            model.addRow(row);
                        }
                    }
                }
//                   
                }
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        processJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btnBackBtn = new javax.swing.JButton();
        lblSelectedNode = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrders = new javax.swing.JTable();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        processJButton.setText("Process");
        processJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJButtonActionPerformed(evt);
            }
        });
        add(processJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 280, -1, -1));

        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 90, -1, -1));

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        jPanel3.setPreferredSize(new java.awt.Dimension(923, 59));

        btnBackBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back.png"))); // NOI18N
        btnBackBtn.setAlignmentX(0.5F);
        btnBackBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnBackBtn.setBorderPainted(false);
        btnBackBtn.setContentAreaFilled(false);
        btnBackBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackBtnActionPerformed(evt);
            }
        });

        lblSelectedNode.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblSelectedNode.setForeground(new java.awt.Color(255, 255, 255));
        lblSelectedNode.setText("Place Insulin Order");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSelectedNode, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 346, Short.MAX_VALUE)
                .addComponent(btnBackBtn)
                .addGap(19, 19, 19))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBackBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(lblSelectedNode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 680, 60));

        jPanel1.setMinimumSize(new java.awt.Dimension(100, 100));
        jPanel1.setLayout(new java.awt.CardLayout());

        tblOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "RequestId", "Customer", "Type", "Quantity", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblOrders.setSelectionBackground(new java.awt.Color(51, 153, 255));
        tblOrders.setShowGrid(false);
        jScrollPane1.setViewportView(tblOrders);

        jPanel1.add(jScrollPane1, "card2");

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 130, 450, 140));
    }// </editor-fold>//GEN-END:initComponents

    private void processJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJButtonActionPerformed
       
        int selectedRow = tblOrders.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please Select a row");
            return;
        }
//        System.out.println(delman.isIsSupplier());
        if(!delman.isIsSupplier()){
            ReStockWorkRequest wr = (ReStockWorkRequest) tblOrders.getValueAt(selectedRow, 0);
            ProcessSupplierWorkRequestJPanel processWorkRequestJPanel = new ProcessSupplierWorkRequestJPanel(userProcessContainer, wr, account, system, delman);
            userProcessContainer.add("processWorkRequestJPanel", processWorkRequestJPanel);
        } else {
            PatientOrderWorkRequest wrp = (PatientOrderWorkRequest) tblOrders.getValueAt(selectedRow, 0);
            ProcessWorkRequestJPanel processWorkRequestJPanel = new ProcessWorkRequestJPanel(userProcessContainer, wrp, account, system, delman);
            userProcessContainer.add("processWorkRequestJPanel", processWorkRequestJPanel);
        } 
        
//        request.setTestResult(workRequestJTable.getValueAt(selectedRow, 0).toString());
//        request.setStatus("Processing");
        
        
//        ProcessWorkRequestJPanel processWorkRequestJPanel = new ProcessWorkRequestJPanel(userProcessContainer, wr, account, system);
        
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_processJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void btnBackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.removeAll();
        JPanel blankJP = new JPanel();
        LoginScreen ls = new LoginScreen(userProcessContainer, system);
        userProcessContainer.add("blank", ls);
        CardLayout crdLyt = (CardLayout) userProcessContainer.getLayout();
        crdLyt.next(userProcessContainer);
        
        dB4OUtil.storeSystem(system);
    }//GEN-LAST:event_btnBackBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblSelectedNode;
    private javax.swing.JButton processJButton;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JTable tblOrders;
    // End of variables declaration//GEN-END:variables
}
