/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.Customer.Customer;
import Business.EcoSystem;
import Business.WorkQueue.PatientAppointmentWorkRequest;
import Business.WorkQueue.PatientOrderWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.Color;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author rolwy
 */
public class AnalyticsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AnalyticsJPanel
     */
    JPanel userProcessContainer;
    EcoSystem system;
    public AnalyticsJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        lblSelectedNode = new javax.swing.JLabel();
        insulinTypeBarGraph = new javax.swing.JButton();
        insulinTypePieChart = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        lblSelectedNode.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblSelectedNode.setForeground(new java.awt.Color(255, 255, 255));
        lblSelectedNode.setText("Analytics");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSelectedNode, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(752, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(lblSelectedNode, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        insulinTypeBarGraph.setText("Insulin Type Comparison");
        insulinTypeBarGraph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insulinTypeBarGraphActionPerformed(evt);
            }
        });

        insulinTypePieChart.setText("Total Administered vs Total Purchased");
        insulinTypePieChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insulinTypePieChartActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(insulinTypeBarGraph, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(insulinTypePieChart, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insulinTypeBarGraph, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(insulinTypePieChart, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 652, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void insulinTypeBarGraphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insulinTypeBarGraphActionPerformed
        // TODO add your handling code here:
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        int orderedQuantity1 = 0;
        int orderedQuantity2 = 0;
        int apptQuantity1 = 0;
        int apptQuantity2 = 0;
        for(Customer c : system.getCustomerDirectory().getCustomerList()){
            for(WorkRequest wr : c.getUserAccount().getWorkQueue().getWorkRequestList()){
                if(wr instanceof PatientAppointmentWorkRequest){
            //                  apptQuantity += ((PatientAppointmentWorkRequest) wr).getQuantity();
                      if(((PatientAppointmentWorkRequest) wr).isType1()){
                          apptQuantity1 += ((PatientAppointmentWorkRequest) wr).getQuantity();
                      }else{
                          apptQuantity2 += ((PatientAppointmentWorkRequest) wr).getQuantity();
                      }
                }
                if(wr instanceof PatientOrderWorkRequest){
            //                  orderedQuantity += ((PatientOrderWorkRequest) wr).getQuantity();
                      if(((PatientOrderWorkRequest) wr).isType1()){
                         orderedQuantity1 +=  ((PatientOrderWorkRequest) wr).getQuantity();
                      }else{
                          orderedQuantity2 += ((PatientOrderWorkRequest) wr).getQuantity();
                      }
                }
            }
        }
    
        // Type 1 Insulin  
        dataset.addValue(orderedQuantity1, "Ordered Doses", "Type 1 Insulin");  
        dataset.addValue(apptQuantity1, "Administered Doses", "Type 1 Insulin");  

        // Type 2 Insulin  
        dataset.addValue(orderedQuantity2, "Ordered Doses", "Type 2 Insulin");  
        dataset.addValue(apptQuantity2, "Administered Doses", "Type 2 Insulin");
        
        JFreeChart chart = ChartFactory.createBarChart("Quantity Ordered vs Administered to Patient", "Type of Diabetes", "Number of Doses", dataset, PlotOrientation.VERTICAL, true,true,false);
        CategoryPlot plot = chart.getCategoryPlot();
        plot.setRangeGridlinePaint(Color.black);
        ChartFrame myFrame = new ChartFrame("Bar Chart for Insulin type", chart);
        myFrame.setVisible(true);
        myFrame.setSize(480,380);
        
    }//GEN-LAST:event_insulinTypeBarGraphActionPerformed

    private void insulinTypePieChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insulinTypePieChartActionPerformed
        // TODO add your handling code here:
        int orderedQuantity = 0;
        int apptQuantity = 0;
        for(Customer c : system.getCustomerDirectory().getCustomerList()){
            for(WorkRequest wr : c.getUserAccount().getWorkQueue().getWorkRequestList()){
                if(wr instanceof PatientAppointmentWorkRequest){
                    apptQuantity += ((PatientAppointmentWorkRequest) wr).getQuantity();
                }
                if(wr instanceof PatientOrderWorkRequest){
                    orderedQuantity += ((PatientOrderWorkRequest) wr).getQuantity();
                }
            }
        } 
        
        DefaultPieDataset dataset = new DefaultPieDataset( );
        dataset.setValue( "Supplied Doses" , orderedQuantity );  
        dataset.setValue( "Administered Doses" , apptQuantity );
        
        JFreeChart chart = ChartFactory.createPieChart("Patient Requests", dataset,true,true,false);
        ChartFrame myFrame = new ChartFrame("Pie Chart", chart);
        myFrame.setVisible(true);
        myFrame.setSize(480,380);
    }//GEN-LAST:event_insulinTypePieChartActionPerformed
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton insulinTypeBarGraph;
    private javax.swing.JButton insulinTypePieChart;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblSelectedNode;
    // End of variables declaration//GEN-END:variables
}
