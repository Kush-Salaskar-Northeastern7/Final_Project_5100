/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DoctorWorkArea;

import Business.DB4OUtil.DB4OUtil;
import Business.Doctor.Doctor;
import Business.EcoSystem;
import Business.Nurse.Nurse;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PatientAppointmentWorkRequest;
import Business.WorkQueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rolwy
 */
public class DoctorWorkRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DoctorWorkRequestJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem system;
    private UserAccount account;
    private PatientAppointmentWorkRequest req;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    public DoctorWorkRequestJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.system = system;
        hideNursesTable();
        populateWorkRequestTable();
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        lblSelectedNode2 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnFinalSubmit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientApmtWorkRequestJTable = new javax.swing.JTable();
        nursesSPane = new javax.swing.JScrollPane();
        tblNurses = new javax.swing.JTable();
        btnRefres = new javax.swing.JButton();
        btnAssignToNurse = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel5.setBackground(new java.awt.Color(51, 51, 51));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        lblSelectedNode2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblSelectedNode2.setForeground(new java.awt.Color(255, 255, 255));
        lblSelectedNode2.setText("Assign Work");

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back.png"))); // NOI18N
        btnBack.setContentAreaFilled(false);
        btnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(lblSelectedNode2, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblSelectedNode2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        btnFinalSubmit.setBackground(new java.awt.Color(0, 153, 153));
        btnFinalSubmit.setForeground(new java.awt.Color(255, 255, 255));
        btnFinalSubmit.setText("Assign");
        btnFinalSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalSubmitActionPerformed(evt);
            }
        });

        patientApmtWorkRequestJTable.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        patientApmtWorkRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "RequestId", "Customer", "Message", "Receiver", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        patientApmtWorkRequestJTable.setRowHeight(23);
        patientApmtWorkRequestJTable.setSelectionBackground(new java.awt.Color(51, 153, 255));
        patientApmtWorkRequestJTable.setShowGrid(false);
        jScrollPane1.setViewportView(patientApmtWorkRequestJTable);

        tblNurses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Nurses"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblNurses.setSelectionBackground(new java.awt.Color(255, 204, 204));
        tblNurses.setShowGrid(false);
        nursesSPane.setViewportView(tblNurses);

        btnRefres.setBackground(new java.awt.Color(0, 153, 153));
        btnRefres.setForeground(new java.awt.Color(255, 255, 255));
        btnRefres.setText("Refresh");
        btnRefres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefresActionPerformed(evt);
            }
        });

        btnAssignToNurse.setBackground(new java.awt.Color(0, 153, 153));
        btnAssignToNurse.setForeground(new java.awt.Color(255, 255, 255));
        btnAssignToNurse.setText("Assign to a Nurse");
        btnAssignToNurse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignToNurseActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        jLabel1.setText("Select an appointment to assign it to a nurse");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnRefres, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnAssignToNurse))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 666, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nursesSPane, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnFinalSubmit, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nursesSPane, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFinalSubmit)
                    .addComponent(btnAssignToNurse)
                    .addComponent(btnRefres))
                .addGap(148, 148, 148))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
//        userProcessContainer.removeAll();
//        CustomerAreaJPanel ca = new CustomerAreaJPanel(userProcessContainer, account, ecosystem);
//        userProcessContainer.add("custarea", ca);
//        CardLayout crdLyt = (CardLayout) userProcessContainer.getLayout();
//        crdLyt.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnRefresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefresActionPerformed
        // TODO add your handling code here:
//        populateWorkReqTable();
    }//GEN-LAST:event_btnRefresActionPerformed

    public void populateNursesTable(){
        DefaultTableModel model = (DefaultTableModel) tblNurses.getModel();
        
        model.setRowCount(0);
        if(system.getNurseDirectory().getNurseList().size() == 0) return;
        for(Nurse ns : system.getNurseDirectory().getNurseList()){
            if(account.getUid() == ns.getDoctorId()){
                Object[] row = new Object[2];
                row[0] = ns;
                row[1] = ns.getNurseName();
                
                model.addRow(row);
            }
        }
    }
    
    private void btnAssignToNurseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignToNurseActionPerformed
        // TODO add your handling code here:

        int selectedRow = patientApmtWorkRequestJTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row", "Error", JOptionPane.NO_OPTION);
        }
        else {
            PatientAppointmentWorkRequest wr = (PatientAppointmentWorkRequest) patientApmtWorkRequestJTable.getValueAt(selectedRow, 0);
            req = wr;
            tblNurses.setVisible(true);
            btnFinalSubmit.setVisible(true);
            nursesSPane.setVisible(true);
        }

        populateNursesTable();
    }//GEN-LAST:event_btnAssignToNurseActionPerformed

    private void btnFinalSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalSubmitActionPerformed
        // TODO add your handling code here:
//        int selectedRow = tblLabTech.getSelectedRow();
//
//        if (selectedRow < 0) {
//            JOptionPane.showMessageDialog(null, "Please select a row", "Error", JOptionPane.WARNING_MESSAGE);
//        }
//        else {
//            LabTechnician lt = (LabTechnician) tblLabTech.getValueAt(selectedRow, 0);
//            lt.getUserAccount().getWorkQueue().getWorkRequestList().add(req);
//            account.getWorkQueue().getWorkRequestList().remove(req);
//            JOptionPane.showMessageDialog(null, "Task assigned to Lab Technician", "Error", JOptionPane.WARNING_MESSAGE);
//            populateWorkReqTable();
//            populateTechTable();
//        }
    }//GEN-LAST:event_btnFinalSubmitActionPerformed

    public void populateWorkRequestTable() {
        // populate doctorworkreqtable
        System.out.println("fffff");
        DefaultTableModel model = (DefaultTableModel) patientApmtWorkRequestJTable.getModel();
        
        model.setRowCount(0);
        if(system.getDoctorDirectory().getDoctorList().size() == 0) return;
        for (Doctor doc : system.getDoctorDirectory().getDoctorList()) {
//            account.getUsername()
            if (doc.getUserAccount().getUid() == account.getUid()) {
                for(WorkRequest request : doc.getUserAccount().getWorkQueue().getWorkRequestList()){
                    if(request instanceof PatientAppointmentWorkRequest){
                        Object[] row = new Object[5];
                        row[0] = (PatientAppointmentWorkRequest)request;
                        row[1] = ((PatientAppointmentWorkRequest)request).getCustomer();
                        row[2] = ((PatientAppointmentWorkRequest)request).getMessage();
                        row[3] = ((PatientAppointmentWorkRequest)request).getReceiver();
                        row[4] = ((PatientAppointmentWorkRequest)request).getStatus();

                        model.addRow(row);
                    }
                }
            }
        }
        
    }
    
    public void hideNursesTable(){
        tblNurses.setVisible(false);
        btnFinalSubmit.setVisible(false);
        nursesSPane.setVisible(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssignToNurse;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnFinalSubmit;
    private javax.swing.JButton btnRefres;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblSelectedNode2;
    private javax.swing.JScrollPane nursesSPane;
    private javax.swing.JTable patientApmtWorkRequestJTable;
    private javax.swing.JTable tblNurses;
    // End of variables declaration//GEN-END:variables
}
